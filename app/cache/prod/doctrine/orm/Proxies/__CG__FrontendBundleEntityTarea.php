<?php

namespace Proxies\__CG__\Frontend\Bundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Tarea extends \Frontend\Bundle\Entity\Tarea implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setFechaRegistro($fechaRegistro)
    {
        $this->__load();
        return parent::setFechaRegistro($fechaRegistro);
    }

    public function getFechaRegistro()
    {
        $this->__load();
        return parent::getFechaRegistro();
    }

    public function setTema($tema)
    {
        $this->__load();
        return parent::setTema($tema);
    }

    public function getTema()
    {
        $this->__load();
        return parent::getTema();
    }

    public function setValorAproximado($valorAproximado)
    {
        $this->__load();
        return parent::setValorAproximado($valorAproximado);
    }

    public function getValorAproximado()
    {
        $this->__load();
        return parent::getValorAproximado();
    }

    public function setResolucion1($resolucion1)
    {
        $this->__load();
        return parent::setResolucion1($resolucion1);
    }

    public function getResolucion1()
    {
        $this->__load();
        return parent::getResolucion1();
    }

    public function setResolucion2($resolucion2)
    {
        $this->__load();
        return parent::setResolucion2($resolucion2);
    }

    public function getResolucion2()
    {
        $this->__load();
        return parent::getResolucion2();
    }

    public function setSeleccion($seleccion)
    {
        $this->__load();
        return parent::setSeleccion($seleccion);
    }

    public function getSeleccion()
    {
        $this->__load();
        return parent::getSeleccion();
    }

    public function setCumplido($cumplido)
    {
        $this->__load();
        return parent::setCumplido($cumplido);
    }

    public function getCumplido()
    {
        $this->__load();
        return parent::getCumplido();
    }

    public function setResultado($resultado)
    {
        $this->__load();
        return parent::setResultado($resultado);
    }

    public function getResultado()
    {
        $this->__load();
        return parent::getResultado();
    }

    public function setNotas($notas)
    {
        $this->__load();
        return parent::setNotas($notas);
    }

    public function getNotas()
    {
        $this->__load();
        return parent::getNotas();
    }

    public function setAreaPk(\Frontend\Bundle\Entity\Area $areaPk = NULL)
    {
        $this->__load();
        return parent::setAreaPk($areaPk);
    }

    public function getAreaPk()
    {
        $this->__load();
        return parent::getAreaPk();
    }

    public function setUsuarioPk(\Frontend\Bundle\Entity\Usuario $usuarioPk = NULL)
    {
        $this->__load();
        return parent::setUsuarioPk($usuarioPk);
    }

    public function getUsuarioPk()
    {
        $this->__load();
        return parent::getUsuarioPk();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'fechaRegistro', 'tema', 'valorAproximado', 'resolucion1', 'resolucion2', 'seleccion', 'cumplido', 'resultado', 'notas', 'areaPk', 'usuarioPk');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}