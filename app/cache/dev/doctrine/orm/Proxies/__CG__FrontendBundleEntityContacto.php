<?php

namespace Proxies\__CG__\Frontend\Bundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Contacto extends \Frontend\Bundle\Entity\Contacto implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setNombresContacto($nombresContacto)
    {
        $this->__load();
        return parent::setNombresContacto($nombresContacto);
    }

    public function getNombresContacto()
    {
        $this->__load();
        return parent::getNombresContacto();
    }

    public function setApellidosContacto($apellidosContacto)
    {
        $this->__load();
        return parent::setApellidosContacto($apellidosContacto);
    }

    public function getApellidosContacto()
    {
        $this->__load();
        return parent::getApellidosContacto();
    }

    public function setTelefono($telefono)
    {
        $this->__load();
        return parent::setTelefono($telefono);
    }

    public function getTelefono()
    {
        $this->__load();
        return parent::getTelefono();
    }

    public function setExtension($extension)
    {
        $this->__load();
        return parent::setExtension($extension);
    }

    public function getExtension()
    {
        $this->__load();
        return parent::getExtension();
    }

    public function setCelular1($celular1)
    {
        $this->__load();
        return parent::setCelular1($celular1);
    }

    public function getCelular1()
    {
        $this->__load();
        return parent::getCelular1();
    }

    public function setCelular2($celular2)
    {
        $this->__load();
        return parent::setCelular2($celular2);
    }

    public function getCelular2()
    {
        $this->__load();
        return parent::getCelular2();
    }

    public function setCorreoTrabajo($correoTrabajo)
    {
        $this->__load();
        return parent::setCorreoTrabajo($correoTrabajo);
    }

    public function getCorreoTrabajo()
    {
        $this->__load();
        return parent::getCorreoTrabajo();
    }

    public function setCorreoAlternativo($correoAlternativo)
    {
        $this->__load();
        return parent::setCorreoAlternativo($correoAlternativo);
    }

    public function getCorreoAlternativo()
    {
        $this->__load();
        return parent::getCorreoAlternativo();
    }

    public function setObservaciones($observaciones)
    {
        $this->__load();
        return parent::setObservaciones($observaciones);
    }

    public function getObservaciones()
    {
        $this->__load();
        return parent::getObservaciones();
    }

    public function setAreaPk(\Frontend\Bundle\Entity\Area $areaPk = NULL)
    {
        $this->__load();
        return parent::setAreaPk($areaPk);
    }

    public function getAreaPk()
    {
        $this->__load();
        return parent::getAreaPk();
    }

    public function setCiudadPk(\Frontend\Bundle\Entity\Ciudad $ciudadPk = NULL)
    {
        $this->__load();
        return parent::setCiudadPk($ciudadPk);
    }

    public function getCiudadPk()
    {
        $this->__load();
        return parent::getCiudadPk();
    }

    public function setCargoPk(\Frontend\Bundle\Entity\Cargo $cargoPk = NULL)
    {
        $this->__load();
        return parent::setCargoPk($cargoPk);
    }

    public function getCargoPk()
    {
        $this->__load();
        return parent::getCargoPk();
    }

    public function setPosicion($posicion)
    {
        $this->__load();
        return parent::setPosicion($posicion);
    }

    public function getPosicion()
    {
        $this->__load();
        return parent::getPosicion();
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function getAreaContacto()
    {
        $this->__load();
        return parent::getAreaContacto();
    }

    public function getAreaEmpresaContacto()
    {
        $this->__load();
        return parent::getAreaEmpresaContacto();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'nombresContacto', 'apellidosContacto', 'telefono', 'extension', 'celular1', 'celular2', 'correoTrabajo', 'correoAlternativo', 'observaciones', 'posicion', 'areaPk', 'ciudadPk', 'cargoPk');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}